[
  {
    "comment": "/**\r\n * Button menu item for MenuV\r\n * @class\r\n * @extends Item\r\n * @access public\r\n * @name MenuButton\r\n * @alias MenuButton\r\n */",
    "meta": {
      "filename": "button.js",
      "lineno": 3,
      "columnno": 0,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
      "code": {}
    },
    "description": "Button menu item for MenuV",
    "kind": "class",
    "augments": [
      "Item"
    ],
    "access": "public",
    "name": "MenuButton",
    "alias": "MenuButton",
    "longname": "MenuButton",
    "scope": "global",
    "$longname": "MenuButton",
    "$kind": "class",
    "$docmaLink": "api/#MenuButton"
  },
  {
    "comment": "/**\r\n * MenuV library\r\n * @name MenuV\r\n * @alias MenuV\r\n * @class MenuV\r\n */",
    "meta": {
      "filename": "menuv.js",
      "lineno": 55,
      "columnno": 0,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
      "code": {}
    },
    "description": "MenuV library",
    "name": "MenuV",
    "alias": "MenuV",
    "kind": "class",
    "longname": "MenuV",
    "scope": "global",
    "$longname": "MenuV",
    "$kind": "class",
    "$docmaLink": "api/#MenuV",
    "$members": [
      {
        "comment": "/**\r\n * @memberof MenuV\r\n * @returns {Menu}\r\n */",
        "meta": {
          "range": [
            2346,
            2380
          ],
          "filename": "menuv.js",
          "lineno": 89,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
          "code": {
            "id": "astnode100000022",
            "name": "MenuV.CreateMenu",
            "type": "FunctionExpression",
            "paramnames": []
          }
        },
        "memberof": "MenuV",
        "returns": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            }
          }
        ],
        "name": "CreateMenu",
        "longname": "MenuV.CreateMenu",
        "kind": "function",
        "scope": "static",
        "$longname": "MenuV.CreateMenu",
        "$kind": "method",
        "$docmaLink": "api/#MenuV.CreateMenu"
      },
      {
        "comment": "/**\r\n * Class name of @see MenuV\r\n * @memberof MenuV\r\n * @access private\r\n * @private\r\n * @readonly\r\n * @type {string}\r\n * @default 'MenuV'\r\n */",
        "meta": {
          "range": [
            2093,
            2116
          ],
          "filename": "menuv.js",
          "lineno": 72,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
          "code": {
            "id": "astnode100000010",
            "name": "MenuV.__class",
            "type": "Literal",
            "value": "MenuV",
            "paramnames": []
          }
        },
        "description": "Class name of @see MenuV",
        "memberof": "MenuV",
        "access": "private",
        "readonly": true,
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'MenuV'",
        "name": "__class",
        "longname": "MenuV.__class",
        "kind": "member",
        "scope": "static",
        "$longname": "MenuV.__class",
        "$kind": "property",
        "$docmaLink": "api/#MenuV.__class"
      },
      {
        "comment": "/**\r\n * Defined type of @see MenuV\r\n * @memberof MenuV\r\n * @access private\r\n * @private\r\n * @readonly\r\n * @type {string}\r\n * @default 'MenuV'\r\n */",
        "meta": {
          "range": [
            2269,
            2291
          ],
          "filename": "menuv.js",
          "lineno": 83,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
          "code": {
            "id": "astnode100000016",
            "name": "MenuV.__type",
            "type": "Literal",
            "value": "MenuV",
            "paramnames": []
          }
        },
        "description": "Defined type of @see MenuV",
        "memberof": "MenuV",
        "access": "private",
        "readonly": true,
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'MenuV'",
        "name": "__type",
        "longname": "MenuV.__type",
        "kind": "member",
        "scope": "static",
        "$longname": "MenuV.__type",
        "$kind": "property",
        "$docmaLink": "api/#MenuV.__type"
      }
    ]
  },
  {
    "comment": "/**\r\n * Create a new menu\r\n * @param {table} [options={}] Create menu options, see {@link #CreateMenu~options|options}\r\n *      \r\n * @returns {Menu} - New menu\r\n * @example\r\nlocal menu = CreateMenu({\r\n    title = 'MenuV',\r\n    subtitle = 'Welcome to MenuV',\r\n    position = 'topleft',\r\n    r = 0,\r\n    g = 0,\r\n    b = 255,\r\n    size = 'size-125',\r\n    texture = 'example',\r\n    dictionary = 'menuv',\r\n    namespace = 'example_namespace'\r\n})\r\n */",
    "meta": {
      "range": [
        501,
        7289
      ],
      "filename": "menu.js",
      "lineno": 22,
      "columnno": 6,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
      "code": {
        "id": "astnode100000151",
        "name": "CreateMenu",
        "type": "FunctionExpression"
      },
      "vars": {
        "Menu": null,
        "Menu.Namespace": "Menu.Namespace",
        "Menu.IsOpen": "Menu.IsOpen",
        "Menu.UUID": "Menu.UUID",
        "Menu.Title": "Menu.Title",
        "Menu.Subtitle": "Menu.Subtitle",
        "Menu.Position": "Menu.Position",
        "Menu.Color": "Menu.Color",
        "Menu.Color.R": "Menu.Color.R",
        "Menu.Color.G": "Menu.Color.G",
        "Menu.Color.B": "Menu.Color.B",
        "Menu.Size": "Menu.Size",
        "Menu.Dictionary": "Menu.Dictionary",
        "Menu.Texture": "Menu.Texture",
        "Menu.Threads": "Menu.Threads",
        "Menu.Trigger": "Menu.Trigger",
        "": null,
        "Menu.DestroyThreads": "Menu.DestroyThreads",
        "Menu.On": "Menu.On",
        "Menu.RemoveOnEvent": "Menu.RemoveOnEvent",
        "Menu.Validate": "Menu.Validate",
        "Menu.Parser": "Menu.Parser",
        "Menu.NewIndex": "Menu.NewIndex",
        "Menu.AddButton": "Menu.AddButton"
      }
    },
    "description": "Create a new menu",
    "params": [
      {
        "type": {
          "names": [
            "table"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Create menu options, see {@link #CreateMenu~options|options}",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Menu"
          ]
        },
        "description": "- New menu"
      }
    ],
    "examples": [
      "local menu = CreateMenu({\r\n    title = 'MenuV',\r\n    subtitle = 'Welcome to MenuV',\r\n    position = 'topleft',\r\n    r = 0,\r\n    g = 0,\r\n    b = 255,\r\n    size = 'size-125',\r\n    texture = 'example',\r\n    dictionary = 'menuv',\r\n    namespace = 'example_namespace'\r\n})"
    ],
    "name": "CreateMenu",
    "longname": "CreateMenu",
    "kind": "function",
    "scope": "global",
    "$longname": "CreateMenu",
    "$kind": "method",
    "$docmaLink": "api/#CreateMenu",
    "$members": [
      {
        "comment": "/**\r\n * CreateMenu options\r\n * \r\n * @typedef {object} CreateMenu~options\r\n * \r\n * @param {string} [options.namespace=unknown]\r\n *        Namespace is required to set keybinds, make sure given namespace is unique for every menu.\r\n * @param {boolean|string} [options.title=MenuV]\r\n *        Title that appears on the big banner.\r\n * @param {string} [options.subtitle=\"\"]\r\n *        Subtitle that appears in capital letters in a small black bar.\r\n * @param {string} [options.position=\"topleft\"]\r\n *        Menu position on screen\r\n *         \r\n *         \r\n *        <strong>options:</strong> \r\n * \r\n *        `topleft` | `topcenter` | `topright` | `centerleft` | `center` | `centerright` | `bottomleft` | `bottomcenter` | `bottomright`\r\n * @param {number} [options.r=0]\r\n *        Primary color `RGB` red channel [0-255]\r\n * @param {number} [options.g=0]\r\n *        Primary color `RGB` green channel [0-255]\r\n * @param {number} [options.b=255]\r\n *        Primary color `RGB` blue channel [0-255]\r\n * @param {string} [options.size=size-110]\r\n *        Menu size in %\r\n * \r\n * \r\n *        <strong>options:</strong> \r\n * \r\n *        `size-100` | `size-110` | `size-125` | `size-150` | `size-175` | `size-200`\r\n * @param {string} [options.dictionary=menuv]\r\n *        Texture dictionary name for the banner image\r\n * @param {string} [options.texture=default]\r\n *        Texture name for the banner image\r\n * @param {table} [options.events={}]\r\n *        Custom events to add\r\n * @param {function} [options.validate=nil]\r\n *        Custom {@link #Menu.Validate|Menu.Validate} function\r\n * @param {function} [options.newIndex=nil]\r\n *             Custom {@link #Menu.NewIndex|Menu.NewIndex} function\r\n */",
        "meta": {
          "filename": "menuv.js",
          "lineno": 12,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
          "code": {}
        },
        "description": "CreateMenu options",
        "kind": "typedef",
        "name": "options",
        "type": {
          "names": [
            "object"
          ]
        },
        "params": [
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "unknown",
            "description": "Namespace is required to set keybinds, make sure given namespace is unique for every menu.",
            "name": "options.namespace"
          },
          {
            "type": {
              "names": [
                "boolean",
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "MenuV",
            "description": "Title that appears on the big banner.",
            "name": "options.title"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "\"\"",
            "description": "Subtitle that appears in capital letters in a small black bar.",
            "name": "options.subtitle"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "\"topleft\"",
            "description": "Menu position on screen\r        \r        \r       <strong>options:</strong> \r\r       `topleft` | `topcenter` | `topright` | `centerleft` | `center` | `centerright` | `bottomleft` | `bottomcenter` | `bottomright`",
            "name": "options.position"
          },
          {
            "type": {
              "names": [
                "number"
              ]
            },
            "optional": true,
            "defaultvalue": 0,
            "description": "Primary color `RGB` red channel [0-255]",
            "name": "options.r"
          },
          {
            "type": {
              "names": [
                "number"
              ]
            },
            "optional": true,
            "defaultvalue": 0,
            "description": "Primary color `RGB` green channel [0-255]",
            "name": "options.g"
          },
          {
            "type": {
              "names": [
                "number"
              ]
            },
            "optional": true,
            "defaultvalue": 255,
            "description": "Primary color `RGB` blue channel [0-255]",
            "name": "options.b"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "size-110",
            "description": "Menu size in %\r\r\r       <strong>options:</strong> \r\r       `size-100` | `size-110` | `size-125` | `size-150` | `size-175` | `size-200`",
            "name": "options.size"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "menuv",
            "description": "Texture dictionary name for the banner image",
            "name": "options.dictionary"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "default",
            "description": "Texture name for the banner image",
            "name": "options.texture"
          },
          {
            "type": {
              "names": [
                "table"
              ]
            },
            "optional": true,
            "defaultvalue": "{}",
            "description": "Custom events to add",
            "name": "options.events"
          },
          {
            "type": {
              "names": [
                "function"
              ]
            },
            "optional": true,
            "defaultvalue": "nil",
            "description": "Custom {@link #Menu.Validate|Menu.Validate} function",
            "name": "options.validate"
          },
          {
            "type": {
              "names": [
                "function"
              ]
            },
            "optional": true,
            "defaultvalue": "nil",
            "description": "Custom {@link #Menu.NewIndex|Menu.NewIndex} function",
            "name": "options.newIndex"
          }
        ],
        "memberof": "CreateMenu",
        "longname": "CreateMenu~options",
        "scope": "inner",
        "$longname": "CreateMenu~options",
        "$kind": "typedef",
        "$docmaLink": "api/#CreateMenu~options"
      }
    ]
  },
  {
    "comment": "/**\r\n * Create a new menu item\r\n * \r\n * @param {object} info Information\r\n * @returns {Item} - New menu item\r\n * @global\r\n */",
    "meta": {
      "range": [
        133,
        193
      ],
      "filename": "item.js",
      "lineno": 8,
      "columnno": 6,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
      "code": {
        "id": "astnode100000031",
        "name": "CreateMenuItem",
        "type": "FunctionExpression"
      }
    },
    "description": "Create a new menu item",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "Information",
        "name": "info"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Item"
          ]
        },
        "description": "- New menu item"
      }
    ],
    "scope": "global",
    "name": "CreateMenuItem",
    "longname": "CreateMenuItem",
    "kind": "function",
    "$longname": "CreateMenuItem",
    "$kind": "method",
    "$docmaLink": "api/#CreateMenuItem"
  },
  {
    "comment": "/**\r\n * Item for MenuV\r\n * @name Item\r\n * @alias Item\r\n */",
    "meta": {
      "filename": "item.js",
      "lineno": 1,
      "columnno": 0,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
      "code": {}
    },
    "description": "Item for MenuV",
    "name": "Item",
    "alias": "Item",
    "longname": "Item",
    "kind": "member",
    "scope": "global",
    "$longname": "Item",
    "$kind": "property",
    "$docmaLink": "api/#Item",
    "$members": [
      {
        "comment": "/**\r\n * Trigger registered `on` events\r\n * @memberof Item\r\n * @access public\r\n * @this Item\r\n * @param {Item} item {@link #Item|Item} to trigger event for\r\n * @param {string} event Name of `on` event to trigger\r\n * @param {...*} [params=[]] Additional parameters\r\n */",
        "meta": {
          "range": [
            1782,
            1832
          ],
          "filename": "item.js",
          "lineno": 109,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000130",
            "name": "Item.Trigger",
            "type": "FunctionExpression",
            "paramnames": [
              "item",
              "event",
              "params"
            ]
          }
        },
        "description": "Trigger registered `on` events",
        "memberof": "Item",
        "access": "public",
        "this": "Item",
        "params": [
          {
            "type": {
              "names": [
                "Item"
              ]
            },
            "description": "{@link #Item|Item} to trigger event for",
            "name": "item"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of `on` event to trigger",
            "name": "event"
          },
          {
            "type": {
              "names": [
                "*"
              ]
            },
            "optional": true,
            "variable": true,
            "defaultvalue": "[]",
            "description": "Additional parameters",
            "name": "params"
          }
        ],
        "name": "Trigger",
        "longname": "Item.Trigger",
        "kind": "function",
        "scope": "static",
        "$longname": "Item.Trigger",
        "$kind": "method",
        "$docmaLink": "api/#Item.Trigger"
      },
      {
        "comment": "/**\r\n * Primary event of current item\r\n * @memberof Item\r\n * @access private\r\n * @type {string}\r\n * @default 'unknown'\r\n * @readonly\r\n */",
        "meta": {
          "range": [
            367,
            391
          ],
          "filename": "item.js",
          "lineno": 26,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000076",
            "name": "Item.__event",
            "type": "Literal",
            "value": "unknown",
            "paramnames": []
          }
        },
        "description": "Primary event of current item",
        "memberof": "Item",
        "access": "private",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'unknown'",
        "readonly": true,
        "name": "__event",
        "longname": "Item.__event",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.__event",
        "$kind": "property",
        "$docmaLink": "api/#Item.__event"
      },
      {
        "comment": "/**\r\n * Parent menu of item\r\n * @memberof Item\r\n * @access private\r\n * @type {Menu|null}\r\n * @default null\r\n * @readonly\r\n */",
        "meta": {
          "range": [
            205,
            223
          ],
          "filename": "item.js",
          "lineno": 16,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000070",
            "name": "Item.__menu",
            "type": "Literal",
            "value": null,
            "paramnames": []
          }
        },
        "description": "Parent menu of item",
        "memberof": "Item",
        "access": "private",
        "type": {
          "names": [
            "Menu",
            "null"
          ]
        },
        "defaultvalue": "null",
        "readonly": true,
        "name": "__menu",
        "longname": "Item.__menu",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.__menu",
        "$kind": "property",
        "$docmaLink": "api/#Item.__menu"
      },
      {
        "comment": "/**\r\n * Description of menu item\r\n * @memberof Item\r\n * @access public\r\n * @type {string}\r\n * @default ''\r\n */",
        "meta": {
          "range": [
            908,
            929
          ],
          "filename": "item.js",
          "lineno": 62,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000100",
            "name": "Item.Description",
            "type": "Literal",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Description of menu item",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "''",
        "name": "Description",
        "longname": "Item.Description",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Description",
        "$kind": "property",
        "$docmaLink": "api/#Item.Description"
      },
      {
        "comment": "/**\r\n * `Disabled` state of menu item\r\n * @memberof Item\r\n * @access public\r\n * @type {boolean}\r\n * @default ''\r\n */",
        "meta": {
          "range": [
            1177,
            1197
          ],
          "filename": "item.js",
          "lineno": 80,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000112",
            "name": "Item.Disabled",
            "type": "Literal",
            "value": null,
            "paramnames": []
          }
        },
        "description": "`Disabled` state of menu item",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "boolean"
          ]
        },
        "defaultvalue": "''",
        "name": "Disabled",
        "longname": "Item.Disabled",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Disabled",
        "$kind": "property",
        "$docmaLink": "api/#Item.Disabled"
      },
      {
        "comment": "/**\r\n * List of all registered `on` events\r\n * @memberof Item\r\n * @access private\r\n * @type {Array}\r\n * @default []\r\n */",
        "meta": {
          "range": [
            1324,
            1340
          ],
          "filename": "item.js",
          "lineno": 89,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000118",
            "name": "Item.Events",
            "type": "ArrayExpression",
            "value": "[]",
            "paramnames": []
          }
        },
        "description": "List of all registered `on` events",
        "memberof": "Item",
        "access": "private",
        "type": {
          "names": [
            "Array"
          ]
        },
        "defaultvalue": "[]",
        "name": "Events",
        "longname": "Item.Events",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Events",
        "$kind": "property",
        "$docmaLink": "api/#Item.Events"
      },
      {
        "comment": "/**\r\n * Icon of menu item\r\n * @memberof Item\r\n * @access public\r\n * @type {string}\r\n * @default 'none'\r\n */",
        "meta": {
          "range": [
            647,
            665
          ],
          "filename": "item.js",
          "lineno": 44,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000088",
            "name": "Item.Icon",
            "type": "Literal",
            "value": "none",
            "paramnames": []
          }
        },
        "description": "Icon of menu item",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'none'",
        "name": "Icon",
        "longname": "Item.Icon",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Icon",
        "$kind": "property",
        "$docmaLink": "api/#Item.Icon"
      },
      {
        "comment": "/**\r\n * Label of menu item\r\n * @memberof Item\r\n * @access public\r\n * @type {string}\r\n * @default ''\r\n */",
        "meta": {
          "range": [
            776,
            791
          ],
          "filename": "item.js",
          "lineno": 53,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000094",
            "name": "Item.Label",
            "type": "Literal",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Label of menu item",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "''",
        "name": "Label",
        "longname": "Item.Label",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Label",
        "$kind": "property",
        "$docmaLink": "api/#Item.Label"
      },
      {
        "comment": "/**\r\n * When item value changed, force to save changes\r\n * @memberof Item\r\n * @access public\r\n * @type {boolean}\r\n * @default false\r\n */",
        "meta": {
          "range": [
            1483,
            1508
          ],
          "filename": "item.js",
          "lineno": 98,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000124",
            "name": "Item.SaveOnUpdate",
            "type": "Literal",
            "value": false,
            "paramnames": []
          }
        },
        "description": "When item value changed, force to save changes",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "boolean"
          ]
        },
        "defaultvalue": "false",
        "name": "SaveOnUpdate",
        "longname": "Item.SaveOnUpdate",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.SaveOnUpdate",
        "$kind": "property",
        "$docmaLink": "api/#Item.SaveOnUpdate"
      },
      {
        "comment": "/**\r\n * Universally Unique Identifier (UUID) \r\n * @memberof Item\r\n * @access public\r\n * @type {string}\r\n * @readonly\r\n */",
        "meta": {
          "range": [
            519,
            533
          ],
          "filename": "item.js",
          "lineno": 35,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000082",
            "name": "Item.UUID",
            "type": "Literal",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Universally Unique Identifier (UUID)",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "readonly": true,
        "name": "UUID",
        "longname": "Item.UUID",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.UUID",
        "$kind": "property",
        "$docmaLink": "api/#Item.UUID"
      },
      {
        "comment": "/**\r\n * Value of menu item\r\n * @memberof Item\r\n * @access public\r\n * @type {any}\r\n * @default ''\r\n */",
        "meta": {
          "range": [
            1037,
            1054
          ],
          "filename": "item.js",
          "lineno": 71,
          "columnno": 0,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes\\items",
          "code": {
            "id": "astnode100000106",
            "name": "Item.Value",
            "type": "Literal",
            "value": null,
            "paramnames": []
          }
        },
        "description": "Value of menu item",
        "memberof": "Item",
        "access": "public",
        "type": {
          "names": [
            "any"
          ]
        },
        "defaultvalue": "''",
        "name": "Value",
        "longname": "Item.Value",
        "kind": "member",
        "scope": "static",
        "$longname": "Item.Value",
        "$kind": "property",
        "$docmaLink": "api/#Item.Value"
      }
    ]
  },
  {
    "comment": "/**\r\n     * Menu for MenuV\r\n     * @name Menu\r\n     * @alias Menu\r\n     */",
    "meta": {
      "filename": "menu.js",
      "lineno": 23,
      "columnno": 4,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
      "code": {}
    },
    "description": "Menu for MenuV",
    "name": "Menu",
    "alias": "Menu",
    "longname": "Menu",
    "kind": "member",
    "scope": "global",
    "$longname": "Menu",
    "$kind": "property",
    "$docmaLink": "api/#Menu",
    "$members": [
      {
        "comment": "/**\r\n     * This function will add a button to {@link #Menu|Menu}\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to add `button` for\r\n     * @param {table} [options={}]\r\n     * Button information\r\n     *      @param {string} [options.icon='']\r\n     *             Emoji as item prefex, see {@link https://emojipedia.org/|emojipedia.org}\r\n     *      @param {string} [options.label='']\r\n     *             Label on button\r\n     *      @param {string} [options.description='']\r\n     *             Button description when this button is active\r\n     *      @param {any|Menu} [options.value=nil]\r\n     *             Button menu value, when value is a {@link #Menu|Menu}, MenuV will open that {@link #Menu|Menu} on button select\r\n     *      @param {boolean} [options.disabled=false]\r\n     *             When this option is `true`, button isn't selectable anymore\r\n     * @returns {MenuButton} - New button item\r\n     */",
        "meta": {
          "range": [
            7177,
            7259
          ],
          "filename": "menu.js",
          "lineno": 266,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000319",
            "name": "Menu.AddButton",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "options"
            ]
          }
        },
        "description": "This function will add a button to {@link #Menu|Menu}",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to add `button` for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "table"
              ]
            },
            "optional": true,
            "defaultvalue": "{}",
            "description": "Button information",
            "name": "options"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "''",
            "description": "Emoji as item prefex, see {@link https://emojipedia.org/|emojipedia.org}",
            "name": "options.icon"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "''",
            "description": "Label on button",
            "name": "options.label"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "optional": true,
            "defaultvalue": "''",
            "description": "Button description when this button is active",
            "name": "options.description"
          },
          {
            "type": {
              "names": [
                "any",
                "Menu"
              ]
            },
            "optional": true,
            "defaultvalue": "nil",
            "description": "Button menu value, when value is a {@link #Menu|Menu}, MenuV will open that {@link #Menu|Menu} on button select",
            "name": "options.value"
          },
          {
            "type": {
              "names": [
                "boolean"
              ]
            },
            "optional": true,
            "defaultvalue": false,
            "description": "When this option is `true`, button isn't selectable anymore",
            "name": "options.disabled"
          }
        ],
        "returns": [
          {
            "type": {
              "names": [
                "MenuButton"
              ]
            },
            "description": "- New button item"
          }
        ],
        "name": "AddButton",
        "longname": "Menu.AddButton",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.AddButton",
        "$kind": "method",
        "$docmaLink": "api/#Menu.AddButton"
      },
      {
        "comment": "/**\r\n     * Destroy all threads on menu\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu Menu to destroy all threads for\r\n     */",
        "meta": {
          "range": [
            4245,
            4284
          ],
          "filename": "menu.js",
          "lineno": 187,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000261",
            "name": "Menu.DestroyThreads",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu"
            ]
          }
        },
        "description": "Destroy all threads on menu",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "Menu to destroy all threads for",
            "name": "menu"
          }
        ],
        "name": "DestroyThreads",
        "longname": "Menu.DestroyThreads",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.DestroyThreads",
        "$kind": "method",
        "$docmaLink": "api/#Menu.DestroyThreads"
      },
      {
        "comment": "/**\r\n     * This function will be executed when `__newindex` has been triggerd\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to trigger `NewIndex` for\r\n     * @param {string} key Name of the key that has been set\r\n     * @param {any} value\r\n     */",
        "meta": {
          "range": [
            6139,
            6184
          ],
          "filename": "menu.js",
          "lineno": 244,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000309",
            "name": "Menu.NewIndex",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "key",
              "value"
            ]
          }
        },
        "description": "This function will be executed when `__newindex` has been triggerd",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to trigger `NewIndex` for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of the key that has been set",
            "name": "key"
          },
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "name": "value"
          }
        ],
        "name": "NewIndex",
        "longname": "Menu.NewIndex",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.NewIndex",
        "$kind": "method",
        "$docmaLink": "api/#Menu.NewIndex"
      },
      {
        "comment": "/**\r\n     * Register a function as `on` event trigger\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to register function for\r\n     * @param {string} event Name of `on` event to trigger\r\n     * @param {function} func Function to trigger\r\n     * @returns {string} Universally Unique Identifier (UUID)\r\n     */",
        "meta": {
          "range": [
            4671,
            4711
          ],
          "filename": "menu.js",
          "lineno": 199,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000269",
            "name": "Menu.On",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "event",
              "func"
            ]
          }
        },
        "description": "Register a function as `on` event trigger",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to register function for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of `on` event to trigger",
            "name": "event"
          },
          {
            "type": {
              "names": [
                "function"
              ]
            },
            "description": "Function to trigger",
            "name": "func"
          }
        ],
        "returns": [
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Universally Unique Identifier (UUID)"
          }
        ],
        "name": "On",
        "longname": "Menu.On",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.On",
        "$kind": "method",
        "$docmaLink": "api/#Menu.On"
      },
      {
        "comment": "/**\r\n     * Parse `value` to matches item type\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to parse values for\r\n     * @param {string} key Name of key to parse input for\r\n     * @param {any} value\r\n     * @returns {any} Any parsed value\r\n     */",
        "meta": {
          "range": [
            5768,
            5811
          ],
          "filename": "menu.js",
          "lineno": 233,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000299",
            "name": "Menu.Parser",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "key",
              "value"
            ]
          }
        },
        "description": "Parse `value` to matches item type",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to parse values for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of key to parse input for",
            "name": "key"
          },
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "name": "value"
          }
        ],
        "returns": [
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "description": "Any parsed value"
          }
        ],
        "name": "Parser",
        "longname": "Menu.Parser",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.Parser",
        "$kind": "method",
        "$docmaLink": "api/#Menu.Parser"
      },
      {
        "comment": "/**\r\n     * Remove a registered `on` event\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to remove event for\r\n     * @param {string} event Name of `on` event to remove\r\n     * @param {string} uuid Universally Unique Identifier (UUID) of registered `on` event\r\n     */",
        "meta": {
          "range": [
            5058,
            5109
          ],
          "filename": "menu.js",
          "lineno": 210,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000279",
            "name": "Menu.RemoveOnEvent",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "event",
              "uuid"
            ]
          }
        },
        "description": "Remove a registered `on` event",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to remove event for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of `on` event to remove",
            "name": "event"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Universally Unique Identifier (UUID) of registered `on` event",
            "name": "uuid"
          }
        ],
        "name": "RemoveOnEvent",
        "longname": "Menu.RemoveOnEvent",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.RemoveOnEvent",
        "$kind": "method",
        "$docmaLink": "api/#Menu.RemoveOnEvent"
      },
      {
        "comment": "/**\r\n     * Trigger registered `on` events\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to trigger event for\r\n     * @param {string} event Name of `on` event to trigger\r\n     * @param {...*} [params=[]] Additional parameters\r\n     */",
        "meta": {
          "range": [
            4009,
            4059
          ],
          "filename": "menu.js",
          "lineno": 178,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000250",
            "name": "Menu.Trigger",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "event",
              "params"
            ]
          }
        },
        "description": "Trigger registered `on` events",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to trigger event for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of `on` event to trigger",
            "name": "event"
          },
          {
            "type": {
              "names": [
                "*"
              ]
            },
            "optional": true,
            "variable": true,
            "defaultvalue": "[]",
            "description": "Additional parameters",
            "name": "params"
          }
        ],
        "name": "Trigger",
        "longname": "Menu.Trigger",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.Trigger",
        "$kind": "method",
        "$docmaLink": "api/#Menu.Trigger"
      },
      {
        "comment": "/**\r\n     * Check if given value is valid\r\n     * @memberof Menu\r\n     * @access public\r\n     * @this Menu\r\n     * @param {Menu} menu {@link #Menu|Menu} to validate input for\r\n     * @param {string} key Name of key to validate input for\r\n     * @param {any} value\r\n     */",
        "meta": {
          "range": [
            5396,
            5441
          ],
          "filename": "menu.js",
          "lineno": 221,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000289",
            "name": "Menu.Validate",
            "type": "FunctionExpression",
            "funcscope": "CreateMenu",
            "paramnames": [
              "menu",
              "key",
              "value"
            ]
          }
        },
        "description": "Check if given value is valid",
        "memberof": "Menu",
        "access": "public",
        "this": "Menu",
        "params": [
          {
            "type": {
              "names": [
                "Menu"
              ]
            },
            "description": "{@link #Menu|Menu} to validate input for",
            "name": "menu"
          },
          {
            "type": {
              "names": [
                "string"
              ]
            },
            "description": "Name of key to validate input for",
            "name": "key"
          },
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "name": "value"
          }
        ],
        "name": "Validate",
        "longname": "Menu.Validate",
        "kind": "function",
        "scope": "static",
        "$longname": "Menu.Validate",
        "$kind": "method",
        "$docmaLink": "api/#Menu.Validate"
      },
      {
        "comment": "/**\r\n     * Menu primary color as <strong>RGB</strong>\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {table}\r\n     * @default { R=0, G=0, B=255 }\r\n     */",
        "meta": {
          "range": [
            2194,
            2209
          ],
          "filename": "menu.js",
          "lineno": 98,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000196",
            "name": "Menu.Color",
            "type": "ObjectExpression",
            "funcscope": "CreateMenu",
            "value": "{}",
            "paramnames": []
          }
        },
        "description": "Menu primary color as <strong>RGB</strong>",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "table"
          ]
        },
        "defaultvalue": "{ R=0, G=0, B=255 }",
        "name": "Color",
        "longname": "Menu.Color",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Color",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Color",
        "$members": [
          {
            "comment": "/**\r\n     * Primary color <strong>RGB</strong> blue channel [0-255]\r\n     * @memberof Menu.Color\r\n     * @access public\r\n     * @type {number}\r\n     * @default 255\r\n     */",
            "meta": {
              "range": [
                2798,
                2816
              ],
              "filename": "menu.js",
              "lineno": 125,
              "columnno": 4,
              "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
              "code": {
                "id": "astnode100000218",
                "name": "Menu.Color.B",
                "type": "Literal",
                "funcscope": "CreateMenu",
                "value": 255,
                "paramnames": []
              }
            },
            "description": "Primary color <strong>RGB</strong> blue channel [0-255]",
            "memberof": "Menu.Color",
            "access": "public",
            "type": {
              "names": [
                "number"
              ]
            },
            "defaultvalue": "255",
            "name": "B",
            "longname": "Menu.Color.B",
            "kind": "member",
            "scope": "static",
            "$longname": "Menu.Color.B",
            "$kind": "property",
            "$docmaLink": "api/#Menu.Color.B"
          },
          {
            "comment": "/**\r\n     * Primary color <strong>RGB</strong> green channel [0-255]\r\n     * @memberof Menu.Color\r\n     * @access public\r\n     * @type {number}\r\n     * @default 0\r\n     */",
            "meta": {
              "range": [
                2595,
                2611
              ],
              "filename": "menu.js",
              "lineno": 116,
              "columnno": 4,
              "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
              "code": {
                "id": "astnode100000210",
                "name": "Menu.Color.G",
                "type": "Literal",
                "funcscope": "CreateMenu",
                "value": 0,
                "paramnames": []
              }
            },
            "description": "Primary color <strong>RGB</strong> green channel [0-255]",
            "memberof": "Menu.Color",
            "access": "public",
            "type": {
              "names": [
                "number"
              ]
            },
            "defaultvalue": "0",
            "name": "G",
            "longname": "Menu.Color.G",
            "kind": "member",
            "scope": "static",
            "$longname": "Menu.Color.G",
            "$kind": "property",
            "$docmaLink": "api/#Menu.Color.G"
          },
          {
            "comment": "/**\r\n     * Primary color <strong>RGB</strong> red channel [0-255]\r\n     * @memberof Menu.Color\r\n     * @access public\r\n     * @type {number}\r\n     * @default 0\r\n     */",
            "meta": {
              "range": [
                2393,
                2409
              ],
              "filename": "menu.js",
              "lineno": 107,
              "columnno": 4,
              "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
              "code": {
                "id": "astnode100000202",
                "name": "Menu.Color.R",
                "type": "Literal",
                "funcscope": "CreateMenu",
                "value": 0,
                "paramnames": []
              }
            },
            "description": "Primary color <strong>RGB</strong> red channel [0-255]",
            "memberof": "Menu.Color",
            "access": "public",
            "type": {
              "names": [
                "number"
              ]
            },
            "defaultvalue": "0",
            "name": "R",
            "longname": "Menu.Color.R",
            "kind": "member",
            "scope": "static",
            "$longname": "Menu.Color.R",
            "$kind": "property",
            "$docmaLink": "api/#Menu.Color.R"
          }
        ]
      },
      {
        "comment": "/**\r\n     * Texture dictionary name for the banner image\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default 'menuv'\r\n     */",
        "meta": {
          "range": [
            3297,
            3317
          ],
          "filename": "menu.js",
          "lineno": 148,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000232",
            "name": "Menu.Dictionary",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Texture dictionary name for the banner image",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'menuv'",
        "name": "Dictionary",
        "longname": "Menu.Dictionary",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Dictionary",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Dictionary"
      },
      {
        "comment": "/**\r\n     * Menu \"open\" state\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @default false\r\n     */",
        "meta": {
          "range": [
            1061,
            1080
          ],
          "filename": "menu.js",
          "lineno": 48,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000166",
            "name": "Menu.IsOpen",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": false,
            "paramnames": []
          }
        },
        "description": "Menu \"open\" state",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "boolean"
          ]
        },
        "readonly": true,
        "defaultvalue": "false",
        "name": "IsOpen",
        "longname": "Menu.IsOpen",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.IsOpen",
        "$kind": "property",
        "$docmaLink": "api/#Menu.IsOpen"
      },
      {
        "comment": "/**\r\n     * Namespace is required to set keybinds, make sure given namespace is unique for every menu.\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @readonly\r\n     * @default 'unknown'\r\n     */",
        "meta": {
          "range": [
            871,
            897
          ],
          "filename": "menu.js",
          "lineno": 38,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000160",
            "name": "Menu.Namespace",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "unknown",
            "paramnames": []
          }
        },
        "description": "Namespace is required to set keybinds, make sure given namespace is unique for every menu.",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "readonly": true,
        "defaultvalue": "'unknown'",
        "name": "Namespace",
        "longname": "Menu.Namespace",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Namespace",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Namespace"
      },
      {
        "comment": "/**\r\n     * Menu position on screen\r\n     * \r\n     * \r\n     * <strong>options:</strong> \r\n     * \r\n     * `topleft` | `topcenter` | `topright` | `centerleft` | `center` | `centerright` | `bottomleft` | `bottomcenter` | `bottomright`\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default 'topleft'\r\n     */",
        "meta": {
          "range": [
            1993,
            2011
          ],
          "filename": "menu.js",
          "lineno": 89,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000190",
            "name": "Menu.Position",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Menu position on screen\r\r\r<strong>options:</strong> \r\r`topleft` | `topcenter` | `topright` | `centerleft` | `center` | `centerright` | `bottomleft` | `bottomcenter` | `bottomright`",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'topleft'",
        "name": "Position",
        "longname": "Menu.Position",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Position",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Position"
      },
      {
        "comment": "/**\r\n     * Menu size in %\r\n     * \r\n     * \r\n     * <strong>options:</strong> \r\n     * \r\n     * `size-100` | `size-110` | `size-125` | `size-150` | `size-175` | `size-200`\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default 'size-110'\r\n     */",
        "meta": {
          "range": [
            3109,
            3123
          ],
          "filename": "menu.js",
          "lineno": 139,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000226",
            "name": "Menu.Size",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Menu size in %\r\r\r<strong>options:</strong> \r\r`size-100` | `size-110` | `size-125` | `size-150` | `size-175` | `size-200`",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'size-110'",
        "name": "Size",
        "longname": "Menu.Size",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Size",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Size"
      },
      {
        "comment": "/**\r\n     * Subtitle that appears in capital letters in a small black bar.\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default ''\r\n     */",
        "meta": {
          "range": [
            1623,
            1641
          ],
          "filename": "menu.js",
          "lineno": 75,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000184",
            "name": "Menu.Subtitle",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Subtitle that appears in capital letters in a small black bar.",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "''",
        "name": "Subtitle",
        "longname": "Menu.Subtitle",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Subtitle",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Subtitle"
      },
      {
        "comment": "/**\r\n     * Texture name for the banner image\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default 'default'\r\n     */",
        "meta": {
          "range": [
            3482,
            3499
          ],
          "filename": "menu.js",
          "lineno": 157,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000238",
            "name": "Menu.Texture",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Texture name for the banner image",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'default'",
        "name": "Texture",
        "longname": "Menu.Texture",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Texture",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Texture"
      },
      {
        "comment": "/**\r\n     * List of current executing threads\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {threads}\r\n     * @default '[]'\r\n     * @readonly\r\n     */",
        "meta": {
          "range": [
            3678,
            3695
          ],
          "filename": "menu.js",
          "lineno": 167,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000244",
            "name": "Menu.Threads",
            "type": "ArrayExpression",
            "funcscope": "CreateMenu",
            "value": "[]",
            "paramnames": []
          }
        },
        "description": "List of current executing threads",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "threads"
          ]
        },
        "defaultvalue": "'[]'",
        "readonly": true,
        "name": "Threads",
        "longname": "Menu.Threads",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Threads",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Threads"
      },
      {
        "comment": "/**\r\n     * Title that appears on the big banner.\r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @default 'MenuV'\r\n     */",
        "meta": {
          "range": [
            1421,
            1436
          ],
          "filename": "menu.js",
          "lineno": 66,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000178",
            "name": "Menu.Title",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Title that appears on the big banner.",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "'MenuV'",
        "name": "Title",
        "longname": "Menu.Title",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.Title",
        "$kind": "property",
        "$docmaLink": "api/#Menu.Title"
      },
      {
        "comment": "/**\r\n     * Universally Unique Identifier (UUID) \r\n     * @memberof Menu\r\n     * @access public\r\n     * @type {string}\r\n     * @readonly\r\n     */",
        "meta": {
          "range": [
            1240,
            1254
          ],
          "filename": "menu.js",
          "lineno": 57,
          "columnno": 4,
          "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src\\classes",
          "code": {
            "id": "astnode100000172",
            "name": "Menu.UUID",
            "type": "Literal",
            "funcscope": "CreateMenu",
            "value": "",
            "paramnames": []
          }
        },
        "description": "Universally Unique Identifier (UUID)",
        "memberof": "Menu",
        "access": "public",
        "type": {
          "names": [
            "string"
          ]
        },
        "readonly": true,
        "name": "UUID",
        "longname": "Menu.UUID",
        "kind": "member",
        "scope": "static",
        "$longname": "Menu.UUID",
        "$kind": "property",
        "$docmaLink": "api/#Menu.UUID"
      }
    ]
  },
  {
    "comment": "/**\r\n * Object\r\n * @typedef {object} table\r\n */",
    "meta": {
      "filename": "menuv.js",
      "lineno": 3,
      "columnno": 0,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
      "code": {}
    },
    "description": "Object",
    "kind": "typedef",
    "name": "table",
    "type": {
      "names": [
        "object"
      ]
    },
    "longname": "table",
    "scope": "global",
    "$longname": "table",
    "$kind": "typedef",
    "$docmaLink": "api/#table"
  },
  {
    "comment": "/**\r\n * List of threads\r\n * @typedef {number[]} threads\r\n */",
    "meta": {
      "filename": "menuv.js",
      "lineno": 7,
      "columnno": 0,
      "path": "C:\\Projects\\menuv_docs\\menuv_docs\\src",
      "code": {}
    },
    "description": "List of threads",
    "kind": "typedef",
    "name": "threads",
    "type": {
      "names": [
        "Array.<number>"
      ]
    },
    "longname": "threads",
    "scope": "global",
    "$longname": "threads",
    "$kind": "typedef",
    "$docmaLink": "api/#threads"
  }
]